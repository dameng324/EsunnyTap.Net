//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace EsunnyTap.Net {

public class ITapTradeAPI : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ITapTradeAPI(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ITapTradeAPI obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(ITapTradeAPI obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~ITapTradeAPI() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          EsunnyTapApiPINVOKE.delete_ITapTradeAPI(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual int SetAPINotify(ITapTradeAPINotify apiNotify) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_SetAPINotify(swigCPtr, ITapTradeAPINotify.getCPtr(apiNotify));
    return ret;
  }

  public virtual int SetHostAddress(string IP, ushort port) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_SetHostAddress(swigCPtr, IP, port);
    return ret;
  }

  public virtual int Login(TapAPITradeLoginAuth loginAuth) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_Login(swigCPtr, TapAPITradeLoginAuth.getCPtr(loginAuth));
    return ret;
  }

  public virtual int Disconnect() {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_Disconnect(swigCPtr);
    return ret;
  }

  public virtual int ChangePassword(ref uint sessionID, TapAPIChangePasswordReq req) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_ChangePassword(swigCPtr, ref sessionID, TapAPIChangePasswordReq.getCPtr(req));
    return ret;
  }

  public virtual int HaveCertainRight(int rightID) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_HaveCertainRight(swigCPtr, rightID);
    return ret;
  }

  public virtual int SetReservedInfo(ref uint sessionID, string info) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_SetReservedInfo(swigCPtr, ref sessionID, info);
    return ret;
  }

  public virtual int QryAccount(ref uint sessionID, TapAPIAccQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryAccount(swigCPtr, ref sessionID, TapAPIAccQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryFund(ref uint sessionID, TapAPIFundReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryFund(swigCPtr, ref sessionID, TapAPIFundReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryExchange(ref uint sessionID) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryExchange(swigCPtr, ref sessionID);
    return ret;
  }

  public virtual int QryCommodity(ref uint sessionID) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryCommodity(swigCPtr, ref sessionID);
    return ret;
  }

  public virtual int QryContract(ref uint sessionID, TapAPICommodity qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryContract(swigCPtr, ref sessionID, TapAPICommodity.getCPtr(qryReq));
    return ret;
  }

  public virtual int InsertOrder(ref uint sessionID, TapAPINewOrder order) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_InsertOrder(swigCPtr, ref sessionID, TapAPINewOrder.getCPtr(order));
    return ret;
  }

  public virtual int CancelOrder(ref uint sessionID, TapAPIOrderCancelReq order) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_CancelOrder(swigCPtr, ref sessionID, TapAPIOrderCancelReq.getCPtr(order));
    return ret;
  }

  public virtual int QryOrder(ref uint sessionID, TapAPIOrderQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryOrder(swigCPtr, ref sessionID, TapAPIOrderQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryOrderProcess(ref uint sessionID, TapAPIOrderProcessQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryOrderProcess(swigCPtr, ref sessionID, TapAPIOrderProcessQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryFill(ref uint sessionID, TapAPIFillQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryFill(swigCPtr, ref sessionID, TapAPIFillQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryPosition(ref uint sessionID, TapAPIPositionQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryPosition(swigCPtr, ref sessionID, TapAPIPositionQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryClose(ref uint sessionID, TapAPICloseQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryClose(swigCPtr, ref sessionID, TapAPICloseQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryDeepQuote(ref uint sessionID, TapAPIContract qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryDeepQuote(swigCPtr, ref sessionID, TapAPIContract.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryExchangeStateInfo(ref uint sessionID, TapAPIExchangeStateInfoQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryExchangeStateInfo(swigCPtr, ref sessionID, TapAPIExchangeStateInfoQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryUpperChannel(ref uint sessionID, TapAPIUpperChannelQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryUpperChannel(swigCPtr, ref sessionID, TapAPIUpperChannelQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryAccountRent(ref uint sessionID, TapAPIAccountRentQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryAccountRent(swigCPtr, ref sessionID, TapAPIAccountRentQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int ActivateOrder(ref uint sessionID, TapAPIOrderCancelReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_ActivateOrder(swigCPtr, ref sessionID, TapAPIOrderCancelReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int SubmitUserLoginInfo(ref uint sessionID, TapAPISubmitUserLoginInfo qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_SubmitUserLoginInfo(swigCPtr, ref sessionID, TapAPISubmitUserLoginInfo.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryBill(ref uint sessionID, TapAPIBillQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryBill(swigCPtr, ref sessionID, TapAPIBillQryReq.getCPtr(qryReq));
    return ret;
  }

  public virtual int QryAccountStorage(ref uint sessionID, TapAPIAccountStorageQryReq qryReq) {
    int ret = EsunnyTapApiPINVOKE.ITapTradeAPI_QryAccountStorage(swigCPtr, ref sessionID, TapAPIAccountStorageQryReq.getCPtr(qryReq));
    return ret;
  }

}

}
